package kitchenexpress;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.*;

/**
 * Este gestiona el menpu que se le presentará a los comensales, al igual que las ordenes de los mismos.
 * @author José Polo
 * @author Wilson Tovar
 */
public class Menú extends javax.swing.JFrame {

    DefaultListModel listModel;
    PlatoPedido PlatosPedido, newPlatoPedido;
    Pedido newPedido;
    boolean PedidoCargado = false;
    int pedCod = 0; // Es el código del pedido
    int foodcont = 0; // Es el contador del número de platos diferentes por pedido
    int valorTotal; // Es el valor total de la losta de platos

    /**
     * Constructor.
     */
    public Menú() {
        initComponents();
        Ini();
    }

    void Ini() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icons/Logo7059.png"))); // Icono
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        Ordenes.setDefaultCloseOperation(EXIT_ON_CLOSE);
        Ordenes.setLocationRelativeTo(null);
        Ordenes.setSize(850, 550);
        Ordenes.setPreferredSize(new Dimension(850, 550));
        Ordenes.setResizable(false);
        Principal.quitBorder(atrasButton);
        Principal.quitBorder(SendButton);
        Principal.quitBorder(LoadButton);
        Principal.quitBorder(DeleteButton);
        Principal.quitBorder(atrasButton1);
        Principal.quitBorder(UploadButton);
        listModel = new DefaultListModel();
        JListMenú.setModel(listModel);
        JListMenúOrdenesPlatos.setModel(listModel);
        JListMenúOrdenesSelecionados.setModel(listModel);

        //Llenar el combobox de mesa
        mesaBox.removeAllItems();
        for (int i = 1; i <= 5; i++) {
            mesaBox.addItem("Mesa " + i);
        }

    }

    /**
     * Limpiar la vista del Frame.
     */
    void limpiarVista() {
        PlatosPedido = new PlatoPedido();
        JListMenúOrdenesSelecionados.setModel(new DefaultListModel());
        JListMenúOrdenesPlatos.setSelectedIndex(0);
        cantSpinner.setValue(0);
        foodcont = 0;
        valorTotal = 0;
        costoDelPlatoOrdenes1.setText("Total: COP");
        //Carda la lista de pedidos de la mesa actual
        if (Inicio.ventanaCocina != null) {
            Inicio.ventanaCocina.Pedidos.toJListByMesa(JListPedidosGenerados, 5 * (Inicio.ventana1.camarero - 1) + 1 + mesaBox.getSelectedIndex());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ordenes = new javax.swing.JFrame();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SendButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JListMenúOrdenesPlatos = new javax.swing.JList<>();
        costoDelPlatoOrdenes = new javax.swing.JLabel();
        foodPicture1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cantSpinner = new javax.swing.JSpinner();
        jScrollPane4 = new javax.swing.JScrollPane();
        JListMenúOrdenesSelecionados = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        LoadButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        atrasButton1 = new javax.swing.JButton();
        mesaBox = new javax.swing.JComboBox<>();
        costoDelPlatoOrdenes1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        JListPedidosGenerados = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        UploadButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        atrasButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListMenú = new javax.swing.JList<>();
        ValorPlatoTxt = new javax.swing.JLabel();
        foodPicture = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescripciónTxt = new javax.swing.JTextArea();

        Ordenes.setTitle("Órdenes - KE");
        Ordenes.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icons/Logo7059.png")));
        Ordenes.setMinimumSize(new java.awt.Dimension(850, 550));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMaximumSize(new java.awt.Dimension(850, 550));
        jPanel7.setMinimumSize(new java.awt.Dimension(850, 550));
        jPanel7.setPreferredSize(new java.awt.Dimension(850, 550));

        jPanel8.setBackground(new java.awt.Color(45, 108, 223));
        jPanel8.setMaximumSize(new java.awt.Dimension(850, 104));
        jPanel8.setMinimumSize(new java.awt.Dimension(850, 104));

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Órdenes");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Logo7059.png"))); // NOI18N
        jLabel8.setText("Logo");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 536, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(42, 42, 42))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        SendButton.setBackground(new java.awt.Color(255, 255, 255));
        SendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Aceptar.png"))); // NOI18N
        SendButton.setToolTipText("Enviar");
        SendButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SendButton.setMaximumSize(new java.awt.Dimension(50, 50));
        SendButton.setMinimumSize(new java.awt.Dimension(50, 50));
        SendButton.setPreferredSize(new java.awt.Dimension(50, 50));
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        JListMenúOrdenesPlatos.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        JListMenúOrdenesPlatos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListMenúOrdenesPlatosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(JListMenúOrdenesPlatos);

        costoDelPlatoOrdenes.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        costoDelPlatoOrdenes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        costoDelPlatoOrdenes.setText("Costo del plato:");

        foodPicture1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        foodPicture1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foodPicture1.setText("No imagen");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Unidades:");

        cantSpinner.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cantSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cantSpinnerStateChanged(evt);
            }
        });

        JListMenúOrdenesSelecionados.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jScrollPane4.setViewportView(JListMenúOrdenesSelecionados);

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Platos");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Seleccionados");

        LoadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Load.png"))); // NOI18N
        LoadButton.setToolTipText("Cargar plato");
        LoadButton.setMaximumSize(new java.awt.Dimension(50, 50));
        LoadButton.setMinimumSize(new java.awt.Dimension(50, 50));
        LoadButton.setPreferredSize(new java.awt.Dimension(50, 50));
        LoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButtonActionPerformed(evt);
            }
        });

        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Clean.png"))); // NOI18N
        DeleteButton.setToolTipText("Eliminar plato");
        DeleteButton.setMaximumSize(new java.awt.Dimension(50, 50));
        DeleteButton.setMinimumSize(new java.awt.Dimension(50, 50));
        DeleteButton.setPreferredSize(new java.awt.Dimension(50, 50));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        atrasButton1.setBackground(new java.awt.Color(255, 255, 255));
        atrasButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Flecha5050.png"))); // NOI18N
        atrasButton1.setToolTipText("Atrás");
        atrasButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atrasButton1.setMaximumSize(new java.awt.Dimension(50, 50));
        atrasButton1.setMinimumSize(new java.awt.Dimension(50, 50));
        atrasButton1.setPreferredSize(new java.awt.Dimension(50, 50));
        atrasButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasButton1ActionPerformed(evt);
            }
        });

        mesaBox.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        mesaBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mesaBox.setToolTipText("Seleccióne la mesa");
        mesaBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesaBoxItemStateChanged(evt);
            }
        });

        costoDelPlatoOrdenes1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        costoDelPlatoOrdenes1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        costoDelPlatoOrdenes1.setText("Total: COP");

        JListPedidosGenerados.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        JListPedidosGenerados.setToolTipText("Los pedidos solo pueden ser cargados durante los primeros 5 minutos");
        jScrollPane5.setViewportView(JListPedidosGenerados);

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Pedidos de la mesa");
        jLabel12.setToolTipText("");

        UploadButton.setBackground(new java.awt.Color(255, 255, 255));
        UploadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/UpLoad.png"))); // NOI18N
        UploadButton.setToolTipText("Cargar pedido");
        UploadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UploadButton.setMaximumSize(new java.awt.Dimension(50, 50));
        UploadButton.setMinimumSize(new java.awt.Dimension(50, 50));
        UploadButton.setPreferredSize(new java.awt.Dimension(50, 50));
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(mesaBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel11)
                .addGap(83, 83, 83)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atrasButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(foodPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(LoadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(costoDelPlatoOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costoDelPlatoOrdenes1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(120, 120, 120)
                        .addComponent(UploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mesaBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(atrasButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(foodPicture1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LoadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(costoDelPlatoOrdenes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costoDelPlatoOrdenes1)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(UploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );

        javax.swing.GroupLayout OrdenesLayout = new javax.swing.GroupLayout(Ordenes.getContentPane());
        Ordenes.getContentPane().setLayout(OrdenesLayout);
        OrdenesLayout.setHorizontalGroup(
            OrdenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        OrdenesLayout.setVerticalGroup(
            OrdenesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú - KE");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icons/Logo7059.png")));
        setMinimumSize(new java.awt.Dimension(850, 550));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMinimumSize(new java.awt.Dimension(850, 550));
        jPanel4.setPreferredSize(new java.awt.Dimension(850, 550));

        jPanel6.setBackground(new java.awt.Color(45, 108, 223));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Menú");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Logo7059.png"))); // NOI18N
        jLabel7.setText("Logo");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 593, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(42, 42, 42))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        atrasButton.setBackground(new java.awt.Color(255, 255, 255));
        atrasButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Flecha5050.png"))); // NOI18N
        atrasButton.setToolTipText("Atrás");
        atrasButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atrasButton.setMaximumSize(new java.awt.Dimension(50, 50));
        atrasButton.setMinimumSize(new java.awt.Dimension(50, 50));
        atrasButton.setPreferredSize(new java.awt.Dimension(50, 50));
        atrasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasButtonActionPerformed(evt);
            }
        });

        JListMenú.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        JListMenú.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JListMenú.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListMenúValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(JListMenú);

        ValorPlatoTxt.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        ValorPlatoTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ValorPlatoTxt.setText("Valor del plato:");

        foodPicture.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        foodPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foodPicture.setText("NO TIENE IMAGEN");

        DescripciónTxt.setEditable(false);
        DescripciónTxt.setColumns(20);
        DescripciónTxt.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        DescripciónTxt.setRows(5);
        jScrollPane2.setViewportView(DescripciónTxt);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(atrasButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(foodPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(ValorPlatoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(foodPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(atrasButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ValorPlatoTxt))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void atrasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasButtonActionPerformed
        this.setVisible(false);
        Inicio.ventana1.camarerosFrame.setVisible(true);
    }//GEN-LAST:event_atrasButtonActionPerformed

    /**
     * Si es un pedido nuevo intentará agregarlo a la lista de pedidos. Si es un
     * pedido cargado intentará modificar el pedido o lo eliminará si tiene 0
     * ingredientes.
     *
     * @param evt es el evento que que espera el click sobre el botón.
     */
    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        if (PedidoCargado == false) {
            if (foodcont > 0) {
                newPedido = new Pedido();
                newPedido.cod = pedCod;
                pedCod++;

                //newPedido.notes = "";
                //Escribe el número de la mesa en el nodo del pedido
                newPedido.mesa = Integer.parseInt(mesaBox.getSelectedItem().toString().substring(5, mesaBox.getSelectedItem().toString().length()));

                newPedido.valortotal = valorTotal;

                newPedido.camarero = Integer.parseInt(Inicio.ventana1.camareroBox.getSelectedItem().toString().substring(9, Inicio.ventana1.camareroBox.getSelectedItem().toString().length()));
                newPedido.Platos = PlatosPedido;

                if (Inicio.ventanaCocina.Pedidos == null) {
                    Inicio.ventanaCocina.Pedidos = new Pedido();
                }

                //Se obtiene la hora en que se obtuvo el pedido
                newPedido.tiempo = Pedido.getHour();

                //Añadir pedido a la lista de pedidos
                Inicio.ventanaCocina.Pedidos = Inicio.ventanaCocina.Pedidos.addPedido(Ordenes, newPedido);

                //Cargar pedidos en cocina
                if (Inicio.ventanaCocina.jListOrderType.getSelectedIndex() == 0) {
                    Inicio.ventanaCocina.Pedidos.sortByOrden();
                } else {
                    Inicio.ventanaCocina.Pedidos.sortByMesa();
                }
                Inicio.ventanaCocina.cagarPedidos(Inicio.ventanaCocina.Pedidos);

                //Guardar el pedido en su archivo
                Inicio.ventanaCocina.Pedidos.toFile(Ordenes, Inicio.PedidosFile);

                //Guardar ingredientes en su archivo
                Inicio.ventanaCocina.Ingredientes.toFile(Ordenes, Inicio.IngredientesFile);

                limpiarVista();

            } else {
                JOptionPane.showMessageDialog(Ordenes, "Debe seleccionar por lo menos 1 plato.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (foodcont > 0) {
            newPedido.tiempo = Pedido.getHour();
            newPedido.valortotal = valorTotal;
            newPedido.Platos = PlatosPedido;
            Inicio.ventanaCocina.cagarPedidos(Inicio.ventanaCocina.Pedidos);

            //Guardar el pedido en su archivo
            Inicio.ventanaCocina.Pedidos.toFile(Ordenes, Inicio.PedidosFile);
            //Limpiar los datos de la vista
            limpiarVista();
        } else {
            JOptionPane.showMessageDialog(Ordenes, "El pedido será eliminado.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            //Si es posible rehusará el código eliminado 
            if (Inicio.ventanaCocina.codPlato - 1 == newPedido.cod) {
                Inicio.ventanaCocina.codPlato--;
            }

            Inicio.ventanaCocina.Pedidos = Inicio.ventanaCocina.Pedidos.eliminarPedido(newPedido);
            if (Inicio.ventanaCocina.Pedidos == null) {
                Inicio.ventanaCocina.Pedidos = new Pedido();
            }
            Inicio.ventanaCocina.cagarPedidos(Inicio.ventanaCocina.Pedidos);

            //Guardar el pedido en su archivo
            Inicio.ventanaCocina.Pedidos.toFile(Ordenes, Inicio.PedidosFile);
            //Limpiar los datos de la vista
            limpiarVista();
        }
    }//GEN-LAST:event_SendButtonActionPerformed

    /**
     * Carga la imagen del plato si tiene y su valor.
     * @param evt
     */
    private void JListMenúValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListMenúValueChanged
        String temp = JListMenú.getSelectedValue();

        // Buscar el plato seleccionado
        Plato Buscar = Inicio.ventanaCocina.Platos;
        while (Buscar != null) {
            if (Buscar.nombre.equals(temp)) {
                DescripciónTxt.setText(Buscar.details);
                ValorPlatoTxt.setText("Valor del plato: " + Buscar.value);
                if (Buscar.imagen != null) {
                    foodPicture.setText("");
                    Buscar.sendImage(foodPicture);
                } else {
                    foodPicture.setIcon(new ImageIcon(""));
                    foodPicture.setText("NO TIENE IMAGEN");
                }
            }
            Buscar = Buscar.link;
        }
    }//GEN-LAST:event_JListMenúValueChanged

    /**
     * Carga la imagen del palto si tiene.
     * @param evt
     */
    private void JListMenúOrdenesPlatosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListMenúOrdenesPlatosValueChanged
        String temp = JListMenúOrdenesPlatos.getSelectedValue();

        // Buscar el plato seleccionado
        Plato Buscar = Inicio.ventanaCocina.Platos;
        while (Buscar != null) {
            if (Buscar.nombre.equals(temp)) {
                DescripciónTxt.setText(Buscar.details);
                costoDelPlatoOrdenes.setText("Costo del plato: " + Buscar.value);
                if (Buscar.imagen != null) {
                    foodPicture1.setText("");
                    Buscar.sendImage(foodPicture1);
                    foodPicture1.repaint();
                } else {
                    foodPicture1.setIcon(new ImageIcon(""));
                    foodPicture1.setText("NO TIENE IMAGEN");
                }
            }
            Buscar = Buscar.link;
        }
    }//GEN-LAST:event_JListMenúOrdenesPlatosValueChanged

    /**
     * Carga un pedido ya creado de la mesa encuestion siempre y cuando el tiempo de creadoo no exceda los 5 minutos.
     * @param evt
     */
    private void LoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButtonActionPerformed
        if (JListMenúOrdenesPlatos.getSelectedIndex() >= 0) {
            if ((int) cantSpinner.getValue() > 0) {
                if (PlatosPedido == null) {
                    PlatosPedido = new PlatoPedido();
                }
                newPlatoPedido = new PlatoPedido();
                newPlatoPedido.nombre = JListMenúOrdenesPlatos.getSelectedValue();
                //Se buscará el código del plato
                Plato Buscar = Inicio.ventanaCocina.Platos;
                while (Buscar != null && newPlatoPedido.nombre.equals(Buscar.nombre) == false) {
                    Buscar = Buscar.link;
                }
                if (Buscar != null) {
                    newPlatoPedido.cant = (int) cantSpinner.getValue();
                    newPlatoPedido.cod = Buscar.cod;
                    newPlatoPedido.value = Buscar.value;
                    int fabricable = Inicio.ventanaCocina.Platos.howMuchPlato(newPlatoPedido, Inicio.ventanaCocina.Ingredientes);
                    if (fabricable >= newPlatoPedido.cant) {
                        PlatosPedido = PlatosPedido.addPlato(Ordenes, newPlatoPedido);
                        PlatosPedido.toJList(JListMenúOrdenesSelecionados);
                        cantSpinner.setValue(0);
                        foodcont++;
                        //Calcula el valor de los platos del pedido
                        valorTotal = PlatosPedido.calculateTot();
                        //Colocar el total en el JLabel 
                        costoDelPlatoOrdenes1.setText(String.valueOf("Total: " + valorTotal + " COP"));
                        //Reservar los ingredientes del plato en cocina
                        Inicio.ventanaCocina.Platos.modifIngredientesPlato(newPlatoPedido, Inicio.ventanaCocina.Ingredientes, false);
                        //Cargar la tabla de ingredientes del administrador de la cocina
                        Inicio.ventanaCocina.cargarIngredientesTablaAdmin();
                    } else {
                        JOptionPane.showMessageDialog(this, "No es posible hacer más de " + fabricable + " unidades de este plato.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No fué posible encontrar el código del plato.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar por lo menos 1 unidad del plato.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un plato para agregar.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_LoadButtonActionPerformed

    private void cantSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cantSpinnerStateChanged
        if ((int) cantSpinner.getValue() < 0) {
            cantSpinner.setValue((int) cantSpinner.getValue() * (-1));
        }
    }//GEN-LAST:event_cantSpinnerStateChanged

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if (PlatosPedido != null) {
            if (JListMenúOrdenesSelecionados.getSelectedIndex() >= 0) {
                PlatoPedido Buscar = PlatosPedido, ant = null;
                while (Buscar != null && Buscar.nombre.equals(JListMenúOrdenesSelecionados.getSelectedValue()) == false) {
                    ant = Buscar;
                    Buscar = Buscar.link;
                }
                //Reponer los ingredientes del plato en cocina
                Inicio.ventanaCocina.Platos.modifIngredientesPlato(Buscar, Inicio.ventanaCocina.Ingredientes, true);
                //Cargar la tabla de ingredientes del administrador de la cocina
                Inicio.ventanaCocina.cargarIngredientesTablaAdmin();

                if (ant == null) {
                    PlatosPedido = PlatosPedido.link;
                    if (PlatosPedido == null) {
                        JListMenúOrdenesSelecionados.setModel(new DefaultListModel());
                        valorTotal = 0;
                    } else {
                        PlatosPedido.toJList(JListMenúOrdenesSelecionados);
                        //Calcula el valor de los platos del pedido
                        valorTotal = PlatosPedido.calculateTot();
                    }

                } else if (Buscar != null) {
                    ant.link = Buscar.link;
                    PlatosPedido.toJList(JListMenúOrdenesSelecionados);
                    //Calcula el valor de los platos del pedido
                    valorTotal = PlatosPedido.calculateTot();
                }

                //Colocar el total en el JLabel 
                costoDelPlatoOrdenes1.setText(String.valueOf("Total: " + valorTotal + " COP"));
                foodcont--;

            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un plato para eliminar.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void atrasButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasButton1ActionPerformed
        Ordenes.setVisible(false);
        while (PlatosPedido != null) {
            //Reponer los ingredientes del plato en cocina
            Inicio.ventanaCocina.Platos.modifIngredientesPlato(PlatosPedido, Inicio.ventanaCocina.Ingredientes, true);
            PlatosPedido = PlatosPedido.link;
        }
        //Cargar la tabla de ingredientes del administrador de la cocina
        Inicio.ventanaCocina.cargarIngredientesTablaAdmin();

        PlatosPedido = new PlatoPedido();
        JListMenúOrdenesSelecionados.setModel(new DefaultListModel());
        JListMenúOrdenesPlatos.setSelectedIndex(0);
        cantSpinner.setValue(0);
        valorTotal = 0;
        foodcont = 0;
        costoDelPlatoOrdenes1.setText("Total: COP");
        foodPicture1.setIcon(new ImageIcon(""));
        Inicio.ventana1.camarerosFrame.setVisible(true);

        if (PedidoCargado) {
            PlatoPedido Buscar = newPedido.Platos; //newPedido en este momento es el pedido que fué cargado
            while (Buscar != null) {
                Inicio.ventanaCocina.Platos.modifIngredientesPlato(Buscar, Inicio.ventanaCocina.Ingredientes, false);
                Buscar = Buscar.link;
            }
            PedidoCargado = false;
        }
    }//GEN-LAST:event_atrasButton1ActionPerformed

    /**
     * Si es posible se carga la informacipon del pedido.
     *
     * @param evt es el evento que que espera el click sobre el botón.
     */
    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed

        if (JListPedidosGenerados.getSelectedIndex() >= 0) {
            Pedido Buscar = Inicio.ventanaCocina.Pedidos;
            int i = Integer.parseInt(((Object) (JListPedidosGenerados.getSelectedValue())).toString());
            while (Buscar != null && Buscar.cod != i) {
                Buscar = Buscar.link;
            }
            if (Buscar != null && Integer.parseInt(Pedido.calculateTime(Buscar.tiempo, Pedido.getHour())) / 60 <= 5 && Integer.parseInt(Pedido.calculateTime(Buscar.tiempo, Pedido.getHour())) / 60 >= 0) {
                PedidoCargado = true;
                PlatoPedido Buscar2 = Buscar.Platos; //Lista de platos a cargar
                PlatosPedido = new PlatoPedido();
                foodcont = 0;
                //Se cargan los platos en la lista de platosPedido local
                while (Buscar2 != null) {
                    newPlatoPedido = new PlatoPedido();
                    newPlatoPedido.cant = Buscar2.cant;
                    newPlatoPedido.cod = Buscar2.cod;
                    newPlatoPedido.nombre = Buscar2.nombre;
                    newPlatoPedido.value = Buscar2.value;
                    PlatosPedido = PlatosPedido.addPlato(Ordenes, newPlatoPedido);
                    foodcont++;
                    Buscar2 = Buscar2.link;
                }

                PlatosPedido.toJList(JListMenúOrdenesSelecionados);
                cantSpinner.setValue(0);
                valorTotal = (int) Buscar.valortotal;
                costoDelPlatoOrdenes1.setText("Total: " + valorTotal);
                newPedido = Buscar;
            } else {
                JOptionPane.showMessageDialog(this, "Solo se pueden modificar los pedidos en los primeros 5 minutos.", "Sorry", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_UploadButtonActionPerformed

    private void mesaBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesaBoxItemStateChanged
        if (Inicio.ventanaCocina != null) {
            Inicio.ventanaCocina.Pedidos.toJListByMesa(JListPedidosGenerados, 5 * (Inicio.ventana1.camarero - 1) + 1 + mesaBox.getSelectedIndex());
        }
    }//GEN-LAST:event_mesaBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            /*
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
             */

        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menú.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menú.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menú.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menú.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menú().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTextArea DescripciónTxt;
    public javax.swing.JList<String> JListMenú;
    public javax.swing.JList<String> JListMenúOrdenesPlatos;
    private javax.swing.JList<String> JListMenúOrdenesSelecionados;
    public javax.swing.JList<String> JListPedidosGenerados;
    private javax.swing.JButton LoadButton;
    public javax.swing.JFrame Ordenes;
    private javax.swing.JButton SendButton;
    private javax.swing.JButton UploadButton;
    private javax.swing.JLabel ValorPlatoTxt;
    private javax.swing.JButton atrasButton;
    private javax.swing.JButton atrasButton1;
    public javax.swing.JSpinner cantSpinner;
    private javax.swing.JLabel costoDelPlatoOrdenes;
    private javax.swing.JLabel costoDelPlatoOrdenes1;
    public javax.swing.JLabel foodPicture;
    public javax.swing.JLabel foodPicture1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JComboBox<String> mesaBox;
    // End of variables declaration//GEN-END:variables
}
