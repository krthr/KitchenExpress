package kitchenexpress;

import java.awt.Toolkit;
import javax.swing.DefaultListModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 * Esta clase es el frame del administrador, donde se cargará la información estadistica de los platos
 * que se realizan en cocina y las ventas por mesa.
 * @author José Polo
 * @author Wilson Tovar
 */
public class Admin extends javax.swing.JFrame {

    Vendidos vendidos; //Objeto de la clase vendidos

    /**
     * Subclase que se usará para generar la lista de platos vendidos en el día.
     */
    class Vendidos {

        String nombre; // Nombre del plato
        int cantidad; // Cantidad de veces vendido
        Vendidos link;
    }

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        Ini();
    }

    /**
     * Inicializar la ventana.
     */
    void Ini() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icons/Logo7059.png"))); // Icono
        llenarMesas();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        Inicio.ventana1.quitBorder(atrasButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        atrasButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtTotalVentas = new javax.swing.JTextField();
        txtPlatoMasVendido = new javax.swing.JTextField();
        txtMeseroDía = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VentasTabla = new javax.swing.JTable();
        selMesa = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txtTotalVenta = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListmasUsados = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JListMenosUsados = new javax.swing.JList<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - KE");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icons/Logo7059.png")));
        setMinimumSize(new java.awt.Dimension(850, 550));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMinimumSize(new java.awt.Dimension(850, 550));
        jPanel7.setPreferredSize(new java.awt.Dimension(850, 550));
        jPanel7.setLayout(null);

        jPanel8.setBackground(new java.awt.Color(45, 108, 223));

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Administrador");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Logo7059.png"))); // NOI18N
        jLabel8.setText("Logo");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(34, 34, 34))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        jPanel7.add(jPanel8);
        jPanel8.setBounds(0, 0, 858, 104);

        atrasButton.setBackground(new java.awt.Color(255, 255, 255));
        atrasButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kitchenexpress/Icons/Flecha5050.png"))); // NOI18N
        atrasButton.setToolTipText("Atrás");
        atrasButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atrasButton.setMaximumSize(new java.awt.Dimension(50, 50));
        atrasButton.setMinimumSize(new java.awt.Dimension(50, 50));
        atrasButton.setPreferredSize(new java.awt.Dimension(50, 50));
        atrasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasButtonActionPerformed(evt);
            }
        });
        jPanel7.add(atrasButton);
        atrasButton.setBounds(18, 489, 50, 50);

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Plato más vendido");
        jPanel7.add(jLabel12);
        jLabel12.setBounds(181, 176, 274, 25);

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Total ventas");
        jPanel7.add(jLabel13);
        jLabel13.setBounds(181, 256, 276, 25);

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Mesero del día");
        jPanel7.add(jLabel14);
        jLabel14.setBounds(181, 355, 276, 25);

        txtTotalVentas.setEditable(false);
        txtTotalVentas.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtTotalVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalVentas.setText("Calculando...");
        jPanel7.add(txtTotalVentas);
        txtTotalVentas.setBounds(181, 292, 276, 31);

        txtPlatoMasVendido.setEditable(false);
        txtPlatoMasVendido.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtPlatoMasVendido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlatoMasVendido.setText("Calculando...");
        jPanel7.add(txtPlatoMasVendido);
        txtPlatoMasVendido.setBounds(181, 207, 276, 31);

        txtMeseroDía.setEditable(false);
        txtMeseroDía.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtMeseroDía.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMeseroDía.setText("Calculando...");
        jPanel7.add(txtMeseroDía);
        txtMeseroDía.setBounds(181, 391, 276, 31);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("VENTAS");
        jPanel7.add(jLabel11);
        jLabel11.setBounds(473, 118, 64, 25);

        VentasTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Factura", "Mesa", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(VentasTabla);

        jPanel7.add(jScrollPane1);
        jScrollPane1.setBounds(473, 162, 352, 315);

        selMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        selMesa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selMesaItemStateChanged(evt);
            }
        });
        jPanel7.add(selMesa);
        selMesa.setBounds(733, 124, 92, 20);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("TOTAL");
        jPanel7.add(jLabel15);
        jLabel15.setBounds(473, 483, 41, 20);

        txtTotalVenta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTotalVenta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtTotalVenta.setText("$ 0.0");
        jPanel7.add(txtTotalVenta);
        txtTotalVenta.setBounds(685, 483, 140, 20);

        jScrollPane2.setViewportView(jListmasUsados);

        jPanel7.add(jScrollPane2);
        jScrollPane2.setBounds(18, 207, 145, 100);

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("INGREDIENTES");
        jPanel7.add(jLabel16);
        jLabel16.setBounds(20, 150, 145, 25);

        jScrollPane3.setViewportView(JListMenosUsados);

        jPanel7.add(jScrollPane3);
        jScrollPane3.setBounds(20, 360, 145, 100);

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Menos usados");
        jPanel7.add(jLabel17);
        jLabel17.setBounds(20, 330, 145, 20);

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Más usados");
        jPanel7.add(jLabel18);
        jLabel18.setBounds(18, 181, 145, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Llenar el ComboBox con las mesas.
     */
    void llenarMesas() {
        for (int i = 1; i <= 20; i++) {
            selMesa.addItem("Mesa_" + i);
        }
    }

    /**
     * Volver a ventana1.
     *
     * @param evt Click sobre el botón de volver.
     */
    private void atrasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasButtonActionPerformed
        this.setVisible(false);
        Inicio.ventana1.setVisible(true);
    }//GEN-LAST:event_atrasButtonActionPerformed

    /**
     * Obtener el plato más vendido en el día.
     */
    void platoMasVendido() {
        String fecha_actual = Factura.getDate(); // Fecha actual
        fecha_actual = fecha_actual.substring(9, fecha_actual.length()); // Día/Mes/Año

        Factura temp = Inicio.ventanaCocina.Facturas;
        while (temp != null) {
            String fecha_pedido = temp.fecha_exp; // Fecha de la factura
            fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length()); // Día/Mes/Año

            if (fecha_actual.equals(fecha_pedido)) {
                PlatoPedido p = temp.platos;
                while (p != null) {
                    if (vendidos == null) {
                        vendidos = new Vendidos();
                        vendidos.cantidad = p.cant;
                        vendidos.nombre = p.nombre;
                    } else {
                        Vendidos pven = vendidos;
                        Vendidos ant = vendidos;
                        boolean enc = false;

                        while (pven != null && !enc) {
                            if (pven.nombre.equals(p.nombre)) {
                                pven.cantidad += p.cant;
                                enc = true;
                            }
                            ant = pven;
                            pven = pven.link;
                        }

                        if (!enc) {
                            Vendidos nuevo = new Vendidos();
                            nuevo.cantidad = p.cant;
                            nuevo.nombre = p.nombre;

                            ant.link = nuevo;
                            nuevo.link = null;
                        }
                    }

                    p = p.link;
                }
            }

            temp = temp.getLink();
        }

        Vendidos pven = vendidos.link;
        Vendidos mas_vendido = vendidos;
        while (pven != null) {
            if (pven.cantidad > mas_vendido.cantidad) {
                mas_vendido = pven;
            }
            pven = pven.link;
        }

        txtPlatoMasVendido.setText(mas_vendido.nombre + " (" + mas_vendido.cantidad + ")");
    }

    /**
     * Cuando se selecciona una Mesa en el JComboBox muestra las ventas de esa mesa en el día en cuestón.
     */
    private void selMesaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selMesaItemStateChanged
        int mesa = selMesa.getSelectedIndex(); // Número de mesa seleccionada
        mostrarVentas(mesa);
    }//GEN-LAST:event_selMesaItemStateChanged

    /**
     * Mostrar las ventas de una mesa seleccionada, recorriendo la lista de Factura que se encuentra en la clase Cocina
     * y comprobando que sea tanto la mesa buscada como el día actual.
     * Finalmente la muestra en un JTable en la clase Admin.
     * @param n Número de la mesa. Si es n es 0, se muestran todas.
     */
    void mostrarVentas(int n) {
        String fecha_actual = Factura.getDate(); // Fecha actual
        fecha_actual = fecha_actual.substring(9, fecha_actual.length()); // Día/Mes/Año

        Factura temp = Inicio.ventanaCocina.Facturas; // Primer elemento de la lista de facturas.
        DefaultTableModel tabla = (DefaultTableModel) VentasTabla.getModel(); // Tabla
        tabla.setRowCount(0); // Limpiar tabla
        double sum = 0;

        if (n == 0) { // Todas las facturas
            while (temp != null) {
                String fecha_pedido = temp.fecha_exp;
                fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length());

                System.out.println("FECHA FACTURA: " + temp.cod + fecha_pedido);
                if (fecha_actual.equals(fecha_pedido)) {
                    tabla.addRow(new Object[]{
                        temp.cod,
                        temp.mesa,
                        temp.total
                    });
                    sum += temp.total;
                }
                temp = temp.link;
            }
        } else { // Listar según la mesa seleccionada
            while (temp != null) {
                String fecha_pedido = temp.fecha_exp;
                fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length());

                if (temp.mesa == n && fecha_actual.equals(fecha_pedido)) {
                    tabla.addRow(new Object[]{
                        temp.cod,
                        temp.mesa,
                        temp.total
                    });
                    sum += temp.total;
                }

                temp = temp.link;
            }
        }

        txtTotalVenta.setText("$ " + Math.round(sum * 100.0) / 100.0);
    }

    /**
     * Calcular el total de las ventas del día, para ello recorre la lista de Factura en Cocina
     * y valida que la fecha de la factura coincida con la actual.
     * Finalmente muestra la lista de facturas en una iinstancia de la clase Admin.
     */
    void Ventas() {
        String fecha_actual = Factura.getDate(); // Fecha actual
        fecha_actual = fecha_actual.substring(9, fecha_actual.length()); // Día/Mes/Año
        double total = 0; // Total en ventas
        Factura temp = Inicio.ventanaCocina.Facturas;

        while (temp != null) {
            String fecha_pedido = temp.fecha_exp;
            fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length());

            if (fecha_actual.equals(fecha_pedido)) {
                total += temp.total;
            }

            temp = temp.link;
        }

        txtTotalVentas.setText("$" + Math.round(total * 100.0) / 100.0);
        System.out.println("INFO (Admin) : " + total);
    }

    /**
     * Calcula los Ingredientes que más se usaron y los que menos se usaron durante el día actual y los muestra
     * en sus respectivos JFrames en la clase Admin.
     * Para ello recorre la lista de Factura en Cocina y si la fecha de la factura en cuestion coincide con la fecha actual,
     * se recorre la lista de PlatoPedido de la factura, mientras se busca cada uno en la lista de Plato en Cocina, para luego
     * recorrer la lista de Ingrediente del Plato de Cocina y añadecada ingrediene a la lista AlimientosConsumidos con una cantidad 
     * igual al producto de la cantidad de Ingrediente necesarias para hacer el Plato con la cantidad de platos que se fabricaron del
     * mismo para en ese pedido.
     * Finalmente recorre las lista de Ingrediente generada y ordenada por la cantidad de mayor a menor para encontrar los que más se usaron
     * y los que menos se usaron.
     */
    public void IngredientesMásUtilizado() {
        String fecha_actual = Factura.getDate(); // Fecha actual
        fecha_actual = fecha_actual.substring(9, fecha_actual.length()); // Día/Mes/Año

        Ingrediente AlimentosConsumidos = new Ingrediente();//Es la lista que contendrá los alimentos ussados
        Factura BuscarFactura = Inicio.ventanaCocina.Facturas;
        //Se recorre la lista de facturas 
        while (BuscarFactura != null) {

            String fecha_pedido = BuscarFactura.fecha_exp;
            fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length());

            if (fecha_actual.equals(fecha_pedido)) {

                PlatoPedido BuscarPlatoPedido = BuscarFactura.platos;
                //Se recorre la lista de platoPedido de la Factura en cuestion
                while (BuscarPlatoPedido != null) {
                    Plato BuscarPlato = Inicio.ventanaCocina.Platos;
                    //Se Busca el platoPedido en la lista de platos de Cocina
                    while (BuscarPlato != null && BuscarPlato.cod != BuscarPlatoPedido.cod) {
                        BuscarPlato = BuscarPlato.link;
                    }
                    Ingrediente BuscarIngredientesPlato = BuscarPlato.foodIngredientes;
                    //Se recorre la lista de ingredientes del plato
                    while (BuscarIngredientesPlato != null) {
                        //Se crea un nuevo ingrediente con el nombre antiguo pero con las cantidades gastadas en ese plato
                        Ingrediente nuevoIngrediente = new Ingrediente();
                        nuevoIngrediente.nombre = BuscarIngredientesPlato.nombre;
                        nuevoIngrediente.cant = BuscarIngredientesPlato.cant * BuscarPlatoPedido.cant;
                        //Se añade el nuevoIngrediente a la lista de AlimentosConsumidos
                        AlimentosConsumidos = AlimentosConsumidos.addIngredientes(Inicio.ventanaAdmin, nuevoIngrediente, true, false);

                        BuscarIngredientesPlato = BuscarIngredientesPlato.link;
                    }
                    BuscarPlatoPedido = BuscarPlatoPedido.link;
                }
            }
            BuscarFactura = BuscarFactura.link;
        }
        AlimentosConsumidos = AlimentosConsumidos.sortByCant();

        int cont = 0;
        DefaultListModel model = new DefaultListModel();
        jListmasUsados.setModel(model);

        Ingrediente Buscar = AlimentosConsumidos;
        while (Buscar != null) {
            cont++;
            if (cont <= 5) {
                model.addElement(Buscar.nombre);
            }
            Buscar = Buscar.link;
        }

        model = new DefaultListModel();
        JListMenosUsados.setModel(model);

        Buscar = AlimentosConsumidos;
        while (Buscar != null) {
            cont--;
            if (cont <= 5) {
                model.addElement(Buscar.nombre);
            }
            Buscar = Buscar.link;
        }

    }

    /**
     * Calcula el mesero que más vendió en el día recorriendo la lista de Facturas en cocina y acumulando
     * las cantidades recaudadas por cada mesero en doubles direrentes para finalmente compararlas y 
     * escribir el mayor mesero en en JFrame Admin.
     */
    void calcularMesero() {
        String fecha_actual = Factura.getDate(); // Fecha actual
        fecha_actual = fecha_actual.substring(9, fecha_actual.length()); // Día/Mes/Año

        // Cantidad vendida por cada mesero
        double mesero1 = 0;
        double mesero2 = 0;
        double mesero3 = 0;
        double mesero4 = 0;
        Factura temp = Inicio.ventanaCocina.Facturas; // Inicio de la lista

        while (temp != null) {
            String fecha_pedido = temp.fecha_exp; // Fecha del pedido
            fecha_pedido = fecha_pedido.substring(9, fecha_pedido.length()); // Día/Mes/Año

            if (fecha_pedido.equals(fecha_actual)) {
                switch (temp.camarero) {
                    case 1:
                        mesero1 += temp.total;
                        break;
                    case 2:
                        mesero2 += temp.total;
                        break;
                    case 3:
                        mesero3 += temp.total;
                        break;
                    case 4:
                        mesero4 += temp.total;
                        break;
                    default:
                        break;
                }
            }

            temp = temp.link;
        }

        double m1, m2, mayor;
        int m, mm, mesero;
        if (mesero1 > mesero2) {
            m1 = mesero1;
            m = 1;
        } else {
            m = 2;
            m1 = mesero2;
        }

        if (mesero3 > mesero4) {
            m2 = mesero3;
            mm = 3;
        } else {
            mm = 4;
            m2 = mesero4;
        }

        if (m1 > m2) {
            mesero = m;
            mayor = m1;
        } else {
            mesero = mm;
            mayor = m2;
        }

        System.out.println("INFO (Admin) : Mesero que más vendió: " + m + "(" + mayor + ")");

        txtMeseroDía.setText("Mesero " + m + " ($" + Math.round(mayor * 100.0) / 100.0 + ")");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            /*
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
             */
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListMenosUsados;
    private javax.swing.JTable VentasTabla;
    private javax.swing.JButton atrasButton;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jListmasUsados;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> selMesa;
    private javax.swing.JTextField txtMeseroDía;
    private javax.swing.JTextField txtPlatoMasVendido;
    private javax.swing.JLabel txtTotalVenta;
    private javax.swing.JTextField txtTotalVentas;
    // End of variables declaration//GEN-END:variables
}
